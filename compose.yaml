services:
  reverse-proxy:
    image: traefik:v3.1
    command:
     - "--api.insecure=true"
     - "--providers.docker"
    ports:
     - "80:80"
     - "8080:8080"
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
  server:
    image: 
    labels:
      - "traefik.http.routers.shoptube.rule=Host(
    container_name:
    secrets:
     - db-password
    environment:
     - POSTGRES_HOST-db
     - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
     - POSTGRES_USER=postgres
     - POSTGRES_DB=
     - POSTGRES_PORT-5432
     - POSTGRES_SSLMODE=disable
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
     - db-password
    environment:
     - POSTGRES_DB=
     - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
     - 5432
    healthcheck:
      test: ["CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
secrets:
  db-password:
        file: db/password.txt
